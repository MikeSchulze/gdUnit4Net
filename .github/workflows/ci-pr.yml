name: ci-pr
run-name: ${{ github.head_ref || github.ref_name }}-ci-pr

on:
  pull_request:
    paths-ignore:
      - '**.jpg'
      - '**.png'
      - '**.md'
  #- '**.yml'
  workflow_dispatch:


concurrency:
  group: ci-pr-${{ github.event.number }}
  cancel-in-progress: true


jobs:

  setup-dotnet:
    name: "🔧 Setup .NET8"
    runs-on: 'ubuntu-24.04'
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-dotnet@v5
        with:
          global-json-file: 'global.json'

  compile:
    name: "🔨 Compile Projects"
    needs: setup-dotnet
    runs-on: 'ubuntu-24.04'
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v5
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v5
        with:
          global-json-file: 'global.json'

      - name: "Build Projects"
        run: |
          dotnet restore
          dotnet build /p:EnforceCodeStyleInBuild=false /p:TreatWarningsAsErrors=false

      - name: "Cache Build Output"
        uses: actions/cache@v4
        with:
          path: |
            **/obj
            **/bin
            **/nupkg
          key: ${{ runner.os }}-build-${{ github.sha }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-build-${{ github.sha }}-${{ github.run_id }}

  # Analyzer jobs

  analyzer-style-check:
    name: "🔍 Check Style: Analyzers"
    needs: setup-dotnet
    runs-on: 'ubuntu-24.04'
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v5
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v5
        with:
          global-json-file: 'global.json'

      - name: "Check Code Formatting"
        if: ${{ !cancelled() }}
        run: |
          dotnet format Analyzers/GdUnit4Analyzers.csproj --verify-no-changes --verbosity diagnostic
          dotnet format Analyzers.Test/GdUnit4Analyzers.Tests.csproj --verify-no-changes --verbosity diagnostic


  analyzer-tests:
    name: "🧪 Test: Analyzers"
    needs: compile
    runs-on: 'ubuntu-24.04'
    timeout-minutes: 2

    steps:
      - uses: actions/checkout@v5
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v5
        with:
          global-json-file: 'global.json'

      - name: "Restore Build Cache"
        if: ${{ !cancelled() }}
        uses: actions/cache@v4
        with:
          path: |
            **/obj
            **/bin
            **/nupkg
          key: ${{ runner.os }}-build-${{ github.sha }}-${{ github.run_id }}

      - name: "Run Unit Tests"
        if: ${{ !cancelled() }}
        run: |
          cd Analyzers.Test
          dotnet test --no-build --settings .runsettings --verbosity normal

      - name: "Upload Unit Test Reports"
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          retention-days: 10
          name: artifact_analyzer
          path: |
            Analyzers.Test/TestResults/test-result.trx
            Analyzers.Test/TestResults/test-result.html

  # API
  api-style-check:
    name: "🔍 Check Style: API"
    needs: setup-dotnet
    runs-on: 'ubuntu-24.04'
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v5
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v5
        with:
          global-json-file: 'global.json'

      - name: "Check Code Formatting"
        if: ${{ !cancelled() }}
        run: |
          dotnet format Api/GdUnit4Api.csproj --verify-no-changes --verbosity diagnostic
        # dotnet format Api.Test/GdUnit4ApiTest.csproj --verify-no-changes --verbosity diagnostic

  # Test Adapter
  adapter-style-check:
    name: "🔍 Check Style: Test Adapter"
    needs: setup-dotnet
    runs-on: 'ubuntu-24.04'
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v5
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v5
        with:
          global-json-file: 'global.json'

      - name: "Check Code Formatting"
        if: ${{ !cancelled() }}
        run: |
          dotnet format TestAdapter/GdUnit4TestAdapter.csproj --verify-no-changes --verbosity diagnostic
          dotnet format TestAdapter.Test/GdUnit4TestAdapter.Tests.csproj --verify-no-changes --verbosity diagnostic

  test-adapter-test:
    name: "🧪 Test: TestAdapter"
    needs: compile
    runs-on: 'ubuntu-24.04'
    timeout-minutes: 3

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-dotnet@v5
        with:
          global-json-file: 'global.json'

      - name: "Restore Build Cache"
        if: ${{ !cancelled() }}
        uses: actions/cache@v4
        with:
          path: |
            **/obj
            **/bin
            **/nupkg
          key: ${{ runner.os }}-build-${{ github.sha }}-${{ github.run_id }}

      - name: "Run Unit Tests"
        if: ${{ !cancelled() }}
        run: |
          cd TestAdapter.Test
          dotnet test --settings .runsettings --no-build --verbosity normal

      - name: "Upload Unit Test Reports"
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          retention-days: 10
          name: artifact_adapter_tests
          path: |
            ./TestAdapter.Test/TestResults/test-result.trx
            ./TestAdapter.Test/TestResults/test-result.html


  api-tests:
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        gdunit-version: ['v5.1.1']
        godot-version: ['4.3', '4.4', '4.4.1']
        godot-status: ['stable']
        dotnet-version: ['net9.0']
        #include:
        #  # Latest
        #  - gdunit-version: 'latest'
        #    godot-version: '4.5'
        #    godot-status: 'stable'
        #    dotnet-version: 'net9.0'


    name: "🧪 Test: API on Godot-v${{ matrix.godot-version }}-${{ matrix.godot-status }}"
    needs: [ compile ]
    uses: ./.github/workflows/unit-tests.yml
    with:
      gdunit-version: ${{ matrix.gdunit-version }}
      godot-version: ${{ matrix.godot-version }}
      godot-status: ${{ matrix.godot-status }}


  finalize:
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    name: Final Results
    needs: [ analyzer-style-check, api-style-check, adapter-style-check, analyzer-tests, api-tests, test-adapter-test ]
    steps:
      - run: exit 1
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
