name: ci-pr
run-name: ${{ github.head_ref || github.ref_name }}-ci-pr

on:
  pull_request:
    paths-ignore:
      - '**.jpg'
      - '**.png'
      - '**.md'
  workflow_dispatch:

concurrency:
  group: ci-pr-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  # Global matrix job that defines the .NET versions
  setup-matrix:
    strategy:
      fail-fast: false
      matrix:
        dotnet-version: [ 7.0.410, 8.0.410 ]
        include:
          - dotnet-version: '7.0.410'
            dotnet-major: '7'
          - dotnet-version: '8.0.410'
            dotnet-major: '8'

    name: "🔧 Setup .NET ${{ matrix.dotnet-major }}"
    runs-on: 'ubuntu-22.04'
    timeout-minutes: 1
    outputs:
      dotnet-version: ${{ matrix.dotnet-version }}
      dotnet-major: ${{ matrix.dotnet-major }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

  compile:
    name: "🔨 Compile Projects - .NET ${{ needs.setup-matrix.outputs.dotnet-major }}"
    needs: setup-matrix
    runs-on: 'ubuntu-22.04'
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ needs.setup-matrix.outputs.dotnet-version }}

      - name: "Build Projects"
        run: |
          dotnet restore
          dotnet build /p:EnforceCodeStyleInBuild=false /p:TreatWarningsAsErrors=false

      - name: "Cache Build Output"
        uses: actions/cache@v4
        with:
          path: |
            **/obj
            **/bin
            **/nupkg
          key: ${{ runner.os }}-net${{ needs.setup-matrix.outputs.dotnet-major }}-build-${{ github.sha }}-${{ github.run_id }}

  analyzer-style-check:
    name: "🔍 Check Style: Analyzers - .NET ${{ needs.setup-matrix.outputs.dotnet-major }}"
    needs: setup-matrix
    runs-on: 'ubuntu-22.04'
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ needs.setup-matrix.outputs.dotnet-version }}

      - name: "Check Code Formatting"
        if: ${{ !cancelled() }}
        run: |
          dotnet format Analyzers/GdUnit4Analyzers.csproj --verify-no-changes --verbosity diagnostic
          dotnet format Analyzers.Test/GdUnit4Analyzers.Tests.csproj --verify-no-changes --verbosity diagnostic

  analyzer-tests:
    name: "🧪 Test: Analyzers - .NET ${{ needs.setup-matrix.outputs.dotnet-major }}"
    needs: [ setup-matrix, compile ]
    runs-on: 'ubuntu-22.04'
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ needs.setup-matrix.outputs.dotnet-version }}

      - name: "Restore Build Cache"
        if: ${{ !cancelled() }}
        uses: actions/cache@v4
        with:
          path: |
            **/obj
            **/bin
            **/nupkg
          key: ${{ runner.os }}-net${{ needs.setup-matrix.outputs.dotnet-major }}-build-${{ github.sha }}-${{ github.run_id }}

      - name: "Run Unit Tests"
        if: ${{ !cancelled() }}
        run: |
          cd Analyzers.Test
          dotnet test --no-build --settings .runsettings --verbosity normal

      - name: "Upload Unit Test Reports"
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          retention-days: 10
          name: artifact_analyzer_net${{ needs.setup-matrix.outputs.dotnet-major }}
          path: |
            Analyzers.Test/TestResults/test-result.trx
            Analyzers.Test/TestResults/test-result.html

  api-style-check:
    name: "🔍 Check Style: API - .NET ${{ needs.setup-matrix.outputs.dotnet-major }}"
    needs: setup-matrix
    runs-on: 'ubuntu-22.04'
    timeout-minutes: 2
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ needs.setup-matrix.outputs.dotnet-version }}

      - name: "Check Code Formatting"
        if: ${{ !cancelled() }}
        run: |
          dotnet format Api/GdUnit4Api.csproj --verify-no-changes --verbosity diagnostic

  test-adapter-test:
    name: "🧪 Test: TestAdapter - .NET ${{ needs.setup-matrix.outputs.dotnet-major }}"
    needs: [ setup-matrix, compile ]
    runs-on: 'ubuntu-22.04'
    timeout-minutes: 3
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ needs.setup-matrix.outputs.dotnet-version }}

      - name: "Restore Build Cache"
        if: ${{ !cancelled() }}
        uses: actions/cache@v4
        with:
          path: |
            **/obj
            **/bin
            **/nupkg
          key: ${{ runner.os }}-net${{ needs.setup-matrix.outputs.dotnet-major }}-build-${{ github.sha }}-${{ github.run_id }}

      - name: "Run Unit Tests"
        if: ${{ !cancelled() }}
        run: |
          cd TestAdapter.Test
          dotnet test --settings .runsettings --no-build --verbosity normal

      - name: "Upload Unit Test Reports"
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          retention-days: 10
          name: artifact_adapter_tests_net${{ needs.setup-matrix.outputs.dotnet-major }}
          path: |
            ./TestAdapter.Test/TestResults/test-result.trx
            ./TestAdapter.Test/TestResults/test-result.html

  api-tests:
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        godot-version: [ '4.2', '4.2.1', '4.2.2', '4.3', '4.4' ]
        godot-status: [ 'stable' ]

    name: "🧪 Test: API on Godot-v${{ matrix.godot-version }}-${{ matrix.godot-status }} - .NET ${{ needs.setup-matrix.outputs.dotnet-major }}"
    needs: [ setup-matrix, compile ]
    uses: ./.github/workflows/unit-tests.yml
    with:
      godot-version: ${{ matrix.godot-version }}
      godot-status: ${{ matrix.godot-status }}
      dotnet-version: ${{ needs.setup-matrix.outputs.dotnet-version }}

  finalize:
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    name: "Final Results - .NET ${{ needs.setup-matrix.outputs.dotnet-major }}"
    needs: [ analyzer-style-check, analyzer-tests, api-style-check, api-tests, test-adapter-test ]
    steps:
      - run: exit 1
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
          }}
